services:
  nginx:
    container_name: nginx
    build: requirements/nginx/.
    ports:
      - "443:443"
    volumes:
      - "${HOME}/data/wordpress:/var/www/html:ro"
    env_file: .env
    networks:
      - inception
    depends_on:
      wordpress:
        condition: service_healthy
    restart: on-failure

  wordpress:
    container_name: wordpress
    build: requirements/wordpress/.
    volumes:
      - "${HOME}/data/wordpress:/var/www/html"
    env_file: .env
    networks:
      - inception
    depends_on:
      mariadb:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep '[p]hp-fpm'"]
      interval: 10s
      timeout: 5s
      retries: 5

  mariadb:
    container_name: mariadb
    build: requirements/mariadb/.
    volumes:
      - "${HOME}/data/mariadb:/var/lib/mysql"
    env_file: .env
    networks:
      - inception
    restart: on-failure
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "$DB_HOST", "-u", "$DB_USER", "-p$DB_USER_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # redis:
  #   container_name: redis
  #   build: requirements/redis/.
  #   networks:
  #     - inception
  #   restart: on-failure

  ftp-server:
    container_name: ftp-server
    build: requirements/ftp-server
    ports:
      - "20:20"
      - "21:21"
      - "50000-51000:50000-51000"
    # volumes:
    #   - "${HOME}/data/wordpress:/var/www/html"
    networks:
      - inception
    # restart: on-failure

  # adminer:
  #   container_name: adminer
  #   build: requirements/adminer
  #   networks:
  #     - inception
  #   restart: on-failure

networks:
  inception:
    name: inception
    driver: bridge
